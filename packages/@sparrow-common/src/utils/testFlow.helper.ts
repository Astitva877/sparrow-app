import {
  CollectionAuthTypeBaseEnum,
  CollectionRequestAddToBaseEnum,
} from "../types/workspace/collection-base";

export const defaultAutoGeneratedHeaders = [
  { key: "Accept", value: "*/*", checked: true },
  { key: "Connection", value: "keep-alive", checked: true },
  {
    key: "User-Agent",
    value:
      "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/125.0.0.0 Safari/537.36",
    checked: true,
  },
  { key: "Accept-Encoding", value: "gzip, br", checked: true },
];

export const defaultState = {
  requestBodyLanguage: "Text",
  requestBodyNavigation: "Form Data",
  requestAuthNavigation: "No Auth",
  requestNavigation: "Request Body",
  responseNavigation: "Response",
  responseBodyLanguage: "Text",
  responseBodyFormatter: "Pretty",
  requestExtensionNavigation: "",
  requestLeftSplitterWidthPercentage: 50,
  requestRightSplitterWidthPercentage: 50,
  isExposeEditDescription: true,
  isSendRequestInProgress: false,
  isSaveDescriptionInProgress: false,
  isSaveRequestInProgress: false,
  isParameterBulkEditActive: false,
  isHeaderBulkEditActive: false,
  isChatbotActive: false,
  isChatbotSuggestionsActive: true,
  isChatbotGeneratingResponse: false,
  isDocGenerating: false,
  isDocAlreadyGenerated: false,
};

export const transformRequestData = (input: any) => {
  return {
    id: input.data.requestId || "",
    name: input.data.name || "",
    type: "REQUEST",
    description: "[]",
    source: "USER",
    isDeleted: false,
    createdBy: "",
    updatedBy: "",
    createdAt: "",
    updatedAt: "",
    request: input.data.requestData,
  };
};

export const extractAuthData = (requestData: any) => {
  return {
    auth: {
      bearerToken: requestData.request.auth.bearerToken || "",
      basicAuth: {
        username: requestData.request.auth.basicAuth.username || "",
        password: requestData.request.auth.basicAuth.password || "",
      },
      apiKey: {
        authKey: requestData.request.auth.apiKey.authKey || "",
        authValue: requestData.request.auth.apiKey.authValue || "",
        addTo:
          requestData.request.auth.apiKey.addTo ||
          CollectionRequestAddToBaseEnum.HEADER,
      },
    },
    collectionAuthNavigation:
      requestData.request.selectedRequestAuthType ||
      CollectionAuthTypeBaseEnum.NO_AUTH,
  };
};

export const defaultRequestData = (method: string, url?: string) => {
  return {
    method: method || "",
    url: url || "",
    body: {
      raw: "",
      urlencoded: [
        {
          key: "",
          value: "",
          checked: false,
        },
      ],
      formdata: {
        text: [
          {
            key: "",
            value: "",
            checked: false,
          },
        ],
        file: [],
      },
    },
    headers: [
      {
        key: "",
        value: "",
        checked: false,
      },
    ],
    queryParams: [
      {
        key: "",
        value: "",
        checked: false,
      },
    ],
    auth: {
      bearerToken: "",
      basicAuth: {
        username: "",
        password: "",
      },
      apiKey: {
        authKey: "",
        authValue: "",
        addTo: "",
      },
    },
    selectedRequestBodyType: "text/plain",
    selectedRequestAuthType: "No Auth",
    autoGeneratedHeaders: defaultAutoGeneratedHeaders,
    state: {
      requestBodyLanguage: "Text",
      requestBodyNavigation: "Form Data",
      requestAuthNavigation: "No Auth",
      requestNavigation: "Request Body",
      responseNavigation: "Response",
      responseBodyLanguage: "Text",
      responseBodyFormatter: "Pretty",
      requestExtensionNavigation: "",
      requestLeftSplitterWidthPercentage: 50,
      requestRightSplitterWidthPercentage: 50,
      isExposeEditDescription: true,
      isSendRequestInProgress: false,
      isSaveDescriptionInProgress: false,
      isSaveRequestInProgress: false,
      isParameterBulkEditActive: false,
      isHeaderBulkEditActive: false,
      isChatbotActive: false,
      isChatbotSuggestionsActive: true,
      isChatbotGeneratingResponse: false,
      isDocGenerating: false,
      isDocAlreadyGenerated: false,
    },
  };
};
